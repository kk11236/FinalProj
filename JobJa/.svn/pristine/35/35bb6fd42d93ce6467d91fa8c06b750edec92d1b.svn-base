package jobJa.admin.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import jobJa.admin.mapper.AdminMapper;
import jobJa.admin.service.AdminService;
import jobJa.myPage.member.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class AdminServiceImpl implements AdminService {

	@Autowired
	AdminMapper adminMapper;
	
	@Override
	public List<MemberVO> getMember(Map<String,Object> map) {
		
		return this.adminMapper.getMember(map);  
	}

	@Override
	public int getTotalMem(Map<String,Object> map) {
		
		return this.adminMapper.getTotalMem(map);
	}

	@Override
	public MemberVO getMem(Map<String,Object> map) {
		
		return this.adminMapper.getMem(map);
	}

	@Override
	public int deleteAjax(String memId) {
		
		return this.adminMapper.deleteAjax(memId);
	}

	@Override
	public int deleteSchedule(String memId) {
		
		return this.adminMapper.deleteSchedule(memId);
	}

	@Override
	public int deleteInterestEnt(String memId) {
		
		return this.adminMapper.deleteInterestEnt(memId);
	}

	@Override
	public int deleteAlarm(String memId) {
		
		return this.adminMapper.deleteAlarm(memId);
	}

	@Override
	public int deleteCertificate(String memId) {
		
		return this.adminMapper.deleteCertificate(memId);
	}

	@Override
	public int deletePortfolio(String memId) {
		
		return this.adminMapper.deletePortfolio(memId);
	}

	@Override
	public int deleteInterestRecruit(String memId) {
		
		return this.adminMapper.deleteInterestRecruit(memId);
	}

	@Override
	public int deleteAuth(String memId) {
		
		return this.adminMapper.deleteAuth(memId);
	}

	@Override
	public int deleteProduct(String memId) {
		
		return this.adminMapper.deleteProduct(memId);
	}

	@Override
	public int getTotalCounsel(Map<String, Object> map) {
		
		return this.adminMapper.getTotalCounsel(map);
	}

	@Override
	public List<MemberVO> getCounselor(Map<String, Object> map) {
		
		return this.adminMapper.getCounselor(map);
	}

	@Override
	public int getTotalCounselOffer(Map<String, Object> map) {
		
		return this.adminMapper.getTotalCounselOffer(map);
	}

	@Override
	public List<MemberVO> getCounselorOffer(Map<String, Object> map) {
		
		return this.adminMapper.getCounselorOffer(map);
	}

	@Override
	public int updateYn(Map<String,Object> map) {
		
		return this.adminMapper.updateYn(map);
	}

	@Override
	public int getcsCompleTeCount(Map<String, Object> map) {
		
		return this.adminMapper.getcsCompleTeCount(map);
	}

	@Override
	public int getcsWaitCount(Map<String, Object> map) {
		
		return this.adminMapper.getcsWaitCount(map);
	}

	@Override
	public int getcsFalseCount(Map<String, Object> map) {
		
		return this.adminMapper.getcsFalseCount(map);
	}

	@Override
	public List<MemberVO> getCounselorSuccess(Map<String, Object> map) {
		
		return this.adminMapper.getCounselorSuccess(map);
	}

	@Override
	public List<MemberVO> getCounselorWaiting(Map<String, Object> map) {
		
		return this.adminMapper.getCounselorWaiting(map);
	}

	@Override
	public List<MemberVO> getAdminFalseList(Map<String, Object> map) {
		
		return this.adminMapper.getAdminFalseList(map);
	}

}
