package jobja.mypage.member.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import jobja.item.service.ConsultReviewService;
import jobja.item.service.ConsultService;
import jobja.item.vo.ConsultantLogVO;
import jobja.item.vo.ConsultantReviewVO;
import jobja.item.vo.PaymentVO;
import jobja.mypage.member.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/member")
@Controller
public class MemberConsultantController {
	
	@Autowired
	ConsultService consultService;
	
	@Autowired
	ConsultReviewService consultReviewService;
	
	@GetMapping("/consultantLog")
	public String consultantLog(Principal principal, Model model) {
		
		//나의 상담기록 가져오기
		List<MemberVO> consultantLogVOList = this. consultService.getMyConsultantLog(principal.getName());
		
		log.info("rhkdus?//?/?? list : " + consultantLogVOList);
		
		model.addAttribute("consultantLogVOList", consultantLogVOList);
		
		return "mypageMem/memberConsultantLog";
	}
	
	@GetMapping("/consultantReview")
	public String consultantReview(Principal principal,Model model) {
		
		//마이페이지 내가 쓴 리뷰 목록 가져오기.
		List<ConsultantReviewVO> consultantReviewVOList = this.consultReviewService.getMyconsultReview(principal.getName());
		
		log.info("흐흐흐흐ㅡ흐흫 : " + consultantReviewVOList );
		
		model.addAttribute("consultantReviewVOList", consultantReviewVOList);
		
		return "mypageMem/memberConsultantReview";
		
	}
	
	@PostMapping("/ajaxgetOneReview")
	@ResponseBody
	public ConsultantLogVO ajaxgetOneReview(@RequestBody ConsultantLogVO consultantLogVO) {
		log.info("ㅎㅇㅎㅇㅎㅇ" + consultantLogVO);
		
		//가져온 상담 기록에서 기록 보기 눌렀을 때 상담사가 기록한 코멘트 보기
		consultantLogVO = this.consultService.ajaxgetOneReview(consultantLogVO.getCnsltntNo());
		
		log.info("감ㅅ다온거 : " + consultantLogVO);
		
		return consultantLogVO;
	}
	
	@PostMapping("/ajaxgetReviewInfo")
	@ResponseBody
	public PaymentVO ajaxgetReviewInfo(@RequestBody PaymentVO paymontVO) {
		log.info(" ㅎㅇㅎㅇ" + paymontVO);
		
		//마이페이지 리뷰 작성 전 info 가져옴.
		paymontVO = this.consultService.ajaxgetReviewInfo(paymontVO.getPayNo());
		
		return paymontVO;
	}
	
	@PostMapping("/ajaxinsertReview")
	@ResponseBody
	public int ajaxinsertReview(@RequestBody ConsultantReviewVO consultantReviewVO) {
		
		log.info("gggg" + consultantReviewVO);
		
		//리뷰 등록
		int result = this.consultService.ajaxinsertReview(consultantReviewVO);
		
		log.info("resultasldfas : " + result);
		
		return 1;
	}

}
